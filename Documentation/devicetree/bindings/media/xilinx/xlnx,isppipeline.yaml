# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/media/xilinx/xlnx,isppipeline.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Xilinx Video ISP Pipeline IP

maintainers:
  - Kaushal Kumar <kaushal.kumar@amd.com>
  - Venkat Praveen Kancharlapalli <venkat.praveen.kancharlapalli@amd.com>

description: |
    The Xilinx Video ISP pipeline IP is used to interface to a bayer video source.
    It is a pipeline of image processing functions, such as black level correction, bad pixel correction,
    gain control, auto-white balance, gamma correction etc., processing the raw video from the sensor.
    Gamma_lut array values are computed using compute_gamma function whose link is mentioned below:
    https://github.com/Xilinx/Vitis_Libraries/blob/de67b58ca9c7f4a76411103c0ecf9d467731b476/vision/L1/examples/isppipeline/xf_isp_tb.cpp#L313
    Link to product guide for ISP pipeline is mentioned below:
    https://docs.xilinx.com/r/en-US/Vitis_Libraries/vision/overview.html_3_8

properties:
  compatible:
    const: xlnx,isppipeline-1.0

  reg:
    maxItems: 1

  clocks:
    maxItems: 1
    description: Reference to the AXI Streaming clock.

  clock-names:
    items:
      - const: ap_clk

  xlnx,max-height:
    $ref: /schemas/types.yaml#/definitions/uint16
    description: Maximum number of lines.
    minimum: 64
    maximum: 4320

  xlnx,max-width:
    $ref: /schemas/types.yaml#/definitions/uint16
    description: Maximum number of pixels in a line.
    minimum: 64
    maximum: 8192

  xlnx,rgain:
    $ref: /schemas/types.yaml#/definitions/uint16
    description: To configure gain value for the red channel.
    minimum: 0
    maximum: 65535

  xlnx,bgain:
    $ref: /schemas/types.yaml#/definitions/uint16
    description: To configure gain value for the blue channel.
    minimum: 0
    maximum: 65535

  xlnx,pawb:
    $ref: /schemas/types.yaml#/definitions/uint16
    description: |
        It is used in calculating the threshold value, which is used in gray world
        white balance method to compute average pixel values below the threshold value.
    minimum: 0
    maximum: 65535

  xlnx,mode-reg:
    type: boolean
    description: Flag to enable/disable AWB algorithm

  reset-gpios:
    maxItems: 1
    description: Specifier for GPIO that asserts ISP pipeline IP. Use GPIO_ACTIVE_LOW on ap_rst_n.

  ports:
    type: object

    properties:
      "#address-cells":
        const: 1

      "#size-cells":
        const: 0

      port@0:
        type: object
        description: |
          Input/sink port node, describing module connected to the
          input of ISP pipeline IP.

        properties:
          reg:
            description: |
              Input/sink port number.
            const: 0

          endpoint:
            type: object

            properties:
              remote-endpoint: true

            required:
              - remote-endpoint

            additionalProperties: false

        required:
          - reg
          - endpoint

        additionalProperties: false

      "port@1":
        type: object
        description: |
          Output/source port node, describing module connected to the
          output.

        properties:
          reg:
            description: |
              Output/source port number.
            const: 1

          endpoint:
            type: object

            properties:
              remote-endpoint: true

            required:
              - remote-endpoint

            additionalProperties: false

        required:
          - reg
          - endpoint

        additionalProperties: false

    required:
      - "#address-cells"
      - "#size-cells"
      - port@0
      - port@1

    additionalProperties: false

required:
  - compatible
  - reg
  - clocks
  - reset-gpios
  - xlnx,max-width
  - xlnx,max-height
  - xlnx,rgain
  - xlnx,bgain
  - xlnx,pawb
  - xlnx,mode-reg
  - ports

additionalProperties: false

examples:
  - |
   ISPPipeline: ISPPipeline@a40f0000 {
        compatible = "xlnx,isppipeline-1.0";
        reg = <0xa40f0000 0x10000>;
        clocks = <&misc_clk_0>;
        clock-names = "ap_clk";
        reset-gpios = <&gpio 87 1>;
        xlnx,max-width = /bits/ 16 <3840>;
        xlnx,max-height = /bits/ 16 <2160>;
        xlnx,rgain = /bits/ 16 <128>;
        xlnx,bgain = /bits/ 16 <210>;
        xlnx,pawb = /bits/ 16 <350>;
        xlnx,mode-reg;
        ports {
            #address-cells = <1>;
            #size-cells = <0>;

            port@0 {
                /* Sink port */
                reg = <0>;
                isppipeline_in: endpoint {
                    remote-endpoint = <&isp_csiss_out>;
                };
            };
            port@1 {
                /* Source port */
                reg = <1>;
                isppipeline_out: endpoint {
                    remote-endpoint = <&isp_vcap_csi_in>;
                };
            };
        };
    };
...
